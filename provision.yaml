---
- name: Development Tools
  hosts: localhost
  connection: local
  become: true
  become_user: root
  gather_facts: true
  tasks:
    - name: Update apt repositories to Debian Sid
      block:
        - name: Remove old /etc/apt/sources.list
          ansible.builting.file:
            path: /etc/apt/sources.list
            exists: false
        - name: Create new /etc/apt/sources.list
          ansible.builtin.blockinfile:
            path: /etc/apt/sources.list
            create: true
            block: |
              deb https://deb.debian.org/debian/ sid main contrib non-free non-free-firmware
              deb-src https://deb.debian.org/debian/ sid main contrib non-free non-free-firmware
    - name: Install CLI apt packages
      ansible.builtin.apt:
        force_apt_get: true
        update_cache: true
        upgrade: dist
        name:
          - alacritty
          - build-essential
          - conan
          - curl
          - ca-certificates
          - git
          - gpg
          - i3
          - libvirt-daemon-system 
          - libvirt-clients
          - neovim
          - nmap
          - openssh-client
          - openssh-server
          - pdm
          - python3-opencv
          - qemu-system
          - saods9
          - tmux
          - virtinst
          - xinit
          - xorg
          - xz-utils=5.3.1
    - name: Set I3 as default window manager
      community.general.alternatives:
        link: /usr/bin/x-session-manager
        name: x-session-manager
        path: /usr/bin/i3
        priority: 60
    - name: Ensure SSH key is present
      community.crypto.openssh_keypair:
        path: $HOME/.ssh/$USER@$(hostname -s)
        type: ed25519
        comment: 53884490+austinlucaslake@users.noreply.github.com
        passphrase: {{ ssh_passphrase }}
    - name: Ensure GPG key is present
      block:
        - name: Create GPG key
          ansible.builtin.command:
            cmd: gpg --batch --yes --log-file /dev/stdout --gen-key <(echo "Key-Type: eddsa"; \
                                                                      echo "Key-Curve: Ed25519"; \
                                                                      echo "Subkey-Type: eddsa"; \
                                                                      echo "Subkey-Curve: Ed25519"; \
                                                                      echo "Name-Real: Austin Lucas Lake"; \
                                                                      echo "Name-Comment: $(hostname -s)"; \
                                                                      echo "Name-Email: 53884490+austinlucaslake@users.noreply.github.com"; \
                                                                      echo "Expire-Date: 0"; \
                                                                      echo "Passphrase: {{ gpg_passphrase }}";) | sed -n 's/^\(      \)\([[:alnum:]]*\).*/\2/p'
          register: gpg_fingerprint
    - name: Set Git environment variables
      community.general.git_config:
        scope: global
        name: {{ item.name }}
        value: {{ item.value }}
      with_items:
        - { name: user.name, value: Austin Lucas Lake }
        - { name: user.email, value: 53884490+austinlucaslake@users.noreply.github.com }
        - { name: core.sshCommand, value: /usr/bin/ssh -i $HOME/.ssh/$USER@$(hostname -s) }
        - { name: commit.gpgsign, value: true }
        - { name: user.signingkey, value: {{ gpg_fingerprint.stdout }} }
    - name: Ensure Docker GPG key is saved
      block:
        - name: Fetch Docker GPG key
          ansible.builtin.uri:
            url: https://download.docker.com/linux/debian/gpg
            return_content: true
          register: docker_gpg
        - name: Save Docker GPG key
          ansible.builtin.command:
            cmd: gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            stdin: {{ docker_gpg.content }}
          become: true
        - name: Set Docker GPG key permissions
          ansible.builtin.command:
            cmd: chmod a+r /etc/apt/keyrings/docker.gpg
          become: true
        - name: Add Docker apt repository
          ansible.builtin.apt_repository:
            repo: deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian "$(. /etc/os-release && echo '$VERSION_CODENAME')" stable
            filename: docker
          become: true
    - name: Ensure GitHub CLI repository is available
      block:
        - name: Fetch GitHub GPG key
          ansible.builtin.uri:
            url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
            return_content: true
          register: githubcli_gpg
        - name: Save GitHub CLI GPG key
          ansible.builtin.command:
            cmd: sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            stdin: {{ githubcli_gpg.content }}
          become: true
        - name: Set GitHub CLI GPG key permissions
          ansible.builtin.command:
            cmd: sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          become: true
        - name: Add GitHub CLI apt repository
          ansible.builtin.apt_repository:
            repo: deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main
            filename: github-cli
          become: true
    - name: Install additional Debian packages
      ansible.builtin.apt:
        force_apt_get: true
        update_cache: true
        name:
          - containerd.io
          - docker-ce
          - docker-ce-cli
          - docker-buildx-plugin
          - docker-compose-plugin
          - gh
    - name: GitHub authentication
      block:   
        - name: Add SSH key to GitHub
          community.general.github_key:
            name: $USER@$(hostname -s)
            token: {{ token }}
            pubkey: "{{ lookup('ansible.builtin.file', '$HOME/.ssh/$USER@$(hostname -s)') }}"
        - name: Add GPG key to GitHub 
          block:
            - name: Authorize GitHub CLI
              ansible.builtin.command:
              cmd: gh auth login --with-token
              stdin: {{ token }}
            - name: Add GPG
              ansible.builtin.command:
                cmd: gpg --armor --export {{ gpg_fingerprint.stdout }} | gh gpg-key add - -t $USER@$(hostname -s)
    - name: Ensure Rust is installed
      block:
        - name: Fetch Rust installer
          ansible.builtin.uri:
            url: https//sh.rustup.rs
            return_content: true
          register: rust_installer
        - name: Install Rust
          ansible.builtin.command:
            cmd: sh -s -- default-toolchain stable -y
            stdin: {{ rust_installer.content }}
        - name: Install clippy and rustfmt
          ansible.builtin.command:
            cmd: rustup component add clippy rustfmt
        - name: Install cargo binaries
          community.general.cargo:
            locked: true
            name:
              - cargo-leptos
              - cargo-update
              - trunk
    - name: Ensure Starship repository is available
      block:
        - name: Fetch Starship installer
          ansible.builtin.uri:
            url: https://starship.rs/install.sh
            return_content: true
          register: starship_installer
        - name: Install Starship
          ansible.builtin.command:
            cmd: sh
            stdin: {{ starship_installer.content }}
    - name: Clone Git repositories
      ansible.builtin.git:
        repo: git@github.com:{{ item.repo }}.git
        dest: {{ item.dest }}
        accept_hostkey: true
        clone: true
        key_file: $HOME/.ssh/$USER@$(hostname -s)
      become: true
      with_items:
        - { repo: austinlucaslake/astrosight, dest: $HOME/code/astrosight }
        - { repo: austinlucaslake/c-template, dest: $HOME/code/c-template }
        - { repo: austinlucaslake/dotfiles, dest: $HOME/code/dotfiles }
        - { repo: austinlucaslake/physecs, dest: $HOME/code/physecs }
        - { repo: austinlucaslake/provision, dest: $HOME/code/provision }
        - { repo: austinlucaslake/python-template, dest: $HOME/code/python-template }
        - { repo: austinlucaslake/rust-template, dest: $HOME/code/rust-template }
        - { repo: austinlucaslake/website, dest: $HOME/code/website }
        - { repo: tmux-plugins/tpm, dest: $HOME/.tmux/plugins/tpm }
    - name: Load configuration files
      ansible.builtin.copy:
        src: $HOME/code/dotfiles/src/
        dest: $HOME/
        mode: preserve
      become: true
    - name: GUI packages
      when: not headless | default(false) | bool
      block:
    - name: Reboot machine
      ansible.builtin.reboot:
