---
- name: Porvision
  hosts: 127.0.0.1
  connection: local
  become: true
  tasks:
    - name: Batch 1
      block:
        - name: Install Debian packages
          ansible.builtin.apt:
            package:
              - alacritty
              - build-essential
              - curl
              - git
              - gpg
              - neovim
              - nmap
              - openssh-client
              - openssh-server
              - python-opencv
              - saods9
              - tmux
            deb:
              - https://downloads.slack-edge.com/linux_released/slack-desktop-4.3.2-amd64.deb
              - https://zoom.us/client/latest/zoom_amd_64.deb
          async: 450
          poll: 0
        - name: Create SSH key
          community.crypto.openssh_keypair:
            type: ed25519
            path: /Users/$USER/.ssh/$USER@$(hostname -s)
            comment: 53884490+austinlucaslake@users.noreply.github.com
            passphrase: "{{ sshpassphrase }}"
          async: 15
          poll: 0
        - name: Fetch GitHub CLI GPG key
          ansible.builtin.uri:
            url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
            return_content: true
          register: githubcligpgkey
          async: 15
          poll: 15
        - name: Fetch Spotify GPG key
          ansible.builtin.uri:
            url: https://download.spotify.com/debian/pubkey_7A3A762FAFD4A51F.gpg
            return_content: true
          register: spotifygpgkey
          async: 15
          poll: 15
        - name: Fetch Rust installer
          ansible.builtin.uri:
            url: https://sh.rustup.rs
            return_content: true
          register: rust_installer
          async: 15
          poll: 15
    - name: Batch 2
      block:
        - name: Clone astrosight repository
          ansible.builtin.git:
            repo: git@github.com:austinlucaslake/astrosight.git
            dest: ~/code/astrosight
            accept_hostkey: true
            update: false
          async: 60
          poll: 0
        - name: Clone dotfiles repository
          ansible.builtin.git:
            repo: git@github.com:austinlucaslake/dotfiles.git
            dest: ~/code/dotfiles
            accept_hostkey: true
            update: false
          async: 60
          poll: 0
        - name: Clone provision repository
          ansible.builtin.git:
            repo: git@github.com:austinlucaslake/provision.git
            dest: ~/code/provision
            accept_hostkey: true
            update: false
          async: 60
          poll: 0
        - name: Clone python_template repository
          ansible.builtin.git:
            repo: git@github.com:austinlucaslake/python_template.git
            dest: ~/code/python_template
            accept_hostkey: true
            update: false
          async: 60
          poll: 0
        - name: Clone rust_template repository
          ansible.builtin.git:
            repo: git@github.com:austinlucaslake/rust_template.git
            dest: ~/code/rust_template
            accept_hostkey: true
            update: false
          async: 60
          poll: 0
        - name: Clone website repository
          ansible.builtin.git:
            repo: git@github.com:austinlucaslake/website.git
            dest: ~/code/website
            accept_hostkey: true
            update: false
          async: 60
          poll: 0
        - name: Clone TPM repository
          ansible.builtin.git:
            repo: git@github.com:tmux-plugins/tpm.git
            dest: ~/.tmux/plugins/tpm
            accept_hostkey: true
            update: false
          async: 60
          poll: 0
        - name: Ensure name is set in Git
          community.general.git_config:
            name: user.name
            scope: global
            value: "Austin Lake"
          async: 5
          poll: 0
        - name: Ensure email is set in Git
          community.general.git_config:
            name: user.email
            scope: global
            value: 53884490+austinlucaslake@users.noreply.github.com
          async: 5
          poll: 0
        - name: Ensure new SSH key is used in Git
          community.general.git_config:
            name: core.sshCommand
            scope: global
            value: "/usr/bin/ssh -i ~/.ssh/$USER@$(hostname -s)"
          async: 5
          poll: 0
        - name: Ensure Git commits are automatically signed
          community.general.git_config:
            name: commit.gpgsign
            scope: global
            value: true
          async: 5
          poll: 0
        - name: Run rustup installer
          ansible.builtin.command:
            cmd: sh -s -- default-toolchain stable -y
            stdin: "{{ rust_installer.content }}"
          changed_when: false
          async: 120
          poll: 0
        - name: Create GPG key
          ansible.builtin.command:
            cmd: gpg --batch --passphrase {{ gpgpassphrase }} --quick-gen-key "Austin Lucas Lake <53884490+austinlucaslake@users.noreply.github.com>" ed25519 sign 1y
          changed_when: false
          async: 15
          poll: 0
        - name: Load Spotify GPG key
          ansible.builtin.command:
            cmd: sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/spotify.gpg
            stdin: "{{ spotifygpgkey.content }}"
          changed_when: false
          async: 15
          poll: 15
        - name: Load GitHub CLI GPG key and set file permissions
          ansible.builtin.command:
            cmd: sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg && sudo chmod go+r /usr/share/keyrings/githubcli-archive.keyring.gpg
            stdin: "{{ githubcligpgkey.content }}"
          changed_when: false
          async: 15
          poll: 0
    - name: Batch 3
      block:
        - name: Store GPG keyid
          ansible.builtin.command:
            cmd: gpg --list-secret-keys --keyid-format=long | grep 'sec' | cut -d/ -f2- | cut -d ' ' -f-1
          register: gpgkeyid
          changed_when: false
          async: 15
          poll: 0
        - name: Store GPG fingerprint
          ansible.builtin.command:
            cmd: gpg --list-options show-only-fpr-mbox --list-secret-keys | awk '{print $1}' | cut -d ' ' -f1- | head -n 1
          register: gpgfingerprint
          changed_when: false
          async: 15
          poll: 0
        - name: Add GitHub CLI apt repository to sources.list
          ansible.builtin.apt_repository:
            repo: deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main
            filename: github-cli
          async: 15
          poll: 0
        - name: Add Spotify apt repository to sources.list
          ansible.builtin.apt_repository:
            repo: deb http://repository.spotify.com stable non-free
            filename: spotify
          async: 15
          poll: 0
        - name: Install clippy and rustfmt
          ansible.builtin.command:
            cmd: rustup component add clippy rustfmt
          changed_when: false
          async: 60
          poll: 0
        - name: Install cargo-update, cargo-leptos, and trunk
          community.general.cargo:
            name:
              - cargo-leptos
              - cargo-update
              - trunk
            locked: true
          async: 60
          poll: 0
    - name: Install GitHub CLI and Spotify
      ansible.builtin.apt:
        package:
          - gh
          - spotify-client
      async: 60
      poll: 0
    - name: Load .bashrc configuration file
      ansible.builtin.copy:
        src: ~/code/dotfiles/.bashrc
        dest: ~/.bashrc
        mode: preserve
    - name: Load .bash_profile configuration file
      ansible.builtin.copy:
        src: ~/code/dotfiles/.bash_profile
        dest: ~/.bash_profile
        mode: preserve
    - name: Load Alacritty configuration file
      ansible.builtin.copy:
        src: ~/code/dotfiles/.config/alacritty
        dest: ~/.config/alacritty
        mode: preserve
    - name: Load Neovim configuration file
      ansible.builtin.copy:
        src: ~/code/dotfiles/.config/nvim
        dest: ~/.config/nvim
        mode: preserve
    - name: Load GitHub CLI configuration file
      ansible.builtin.copy:
        src: ~/code/dotfiles/.config/gh
        dest: ~/.config/gh
        mode: preserve
    - name: Load .hushlogin configuration file
      ansible.builtin.copy:
        src: ~/code/dotfiles/.hushlogin
        dest: ~/.hushlogin
        mode: preserve
    - name: Load .profile configuration file
      ansible.builtin.copy:
        src: ~/code/dotfiles/.profile
        dest: ~/.profile
        mode: preserve
    - name: Load Tmux configuration file
      ansible.builtin.copy:
        src: ~/code/dotfiles/.tmux.conf
        dest: ~/.tmux.conf
        mode: preserve
    - name: Specify Git signing key
      community.general.git_config:
        name: user.signingkey
        scope: global
        value: "{{ gpgkeyid.stdout }}"
      async: 1
      poll: 1
    - name: Batch 4
      when: token is defined
      block:
        - name: GitHub CLI authentication
          ansible.builtin.command:
            cmd: gh auth login -p ssh --with-token
            stdin: "{{ token }}"
          changed_when: false
        - name: Add cryptographic keys to GitHub profile
          block:
            - name: SSH
              ansible.builtin.command:
                cmd: gh ssh-key add ~/.ssh/$USER@$(hostname -s).pub -t "$USER@$(hostname -s)"
              changed_when: false
              async: 15
              poll: 0
            - name: GPG
              ansible.builtin.command:
                cmd: gpg --armor --export {{ gpgkeyid.stdout }} | gh gpg-key add - -t "$USER@$(hostname -s)"
              changed_when: false
              async: 15
              poll: 0
    - name: Reboot machine
      ansible.builtin.reboot:
