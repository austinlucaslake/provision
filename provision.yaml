---
- name: Provision
  hosts: localhost
  connection: local
  become: true
  become_user: root
  gather_facts: true
  tasks:
    - name: Batch 1
      block:
        - name: Install Debian packages
          ansible.builtin.apt:
            package:
              - alacritty
              - build-essential
              - curl
              - git
              - gpg
              - neovim
              - nmap
              - openssh-client
              - openssh-server
              - python-opencv
              - saods9
              - tmux
            deb:
              - https://downloads.slack-edge.com/linux_released/slack-desktop-4.3.2-amd64.deb
              - https://zoom.us/client/latest/zoom_amd_64.deb
          async: 450
          poll: 0
        - name: Create SSH key
          ansible.builtin.command:
            cmd: "ssh-keygen -q -t ed25519 -a 100 -C 53884490+austinlucaslake@users.noreply.github.com -N {{ sshpassphrase }} -f ~/.ssh/$USER@$(hostname -s)"
          become: true
          async: 15
          poll: 0
        - name: Fetch GitHub CLI GPG key
          ansible.builtin.uri:
            url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
            return_content: true
          register: githubcligpgkey
          async: 15
          poll: 5
        - name: Fetch Spotify GPG key
          ansible.builtin.uri:
            url: https://download.spotify.com/debian/pubkey_7A3A762FAFD4A51F.gpg
            return_content: true
          register: spotifygpgkey
          async: 15
          poll: 5
        - name: Fetch Rust installer
          ansible.builtin.uri:
            url: https://sh.rustup.rs
            return_content: true
          register: rust_installer
          async: 15
          poll: 5
    - name: Batch 2
      block:
        - name: Clone personal GitHub repositories
          ansible.builtin.git:
            repo: "git@github.com:austinlucaslake/{{ item }}.git"
            dest: "~/code/{{ item }}"
            accept_hostkey: true
            clone: true
            key_file: "~/.ssh/$USER@$(hostname -s)"
          become: true
          with_items:
            - "astrosight"
            - "dotfiles"
            - "provision"
            - "python_template"
            - "rust_template"
            - "website"
          async: 360
          poll: 30
        - name: Clone TPM repository
          ansible.builtin.git:
            repo: git@github.com:tmux-plugins/tpm.git
            dest: ~/.tmux/plugins/tpm
            accept_hostkey: true
            clone: true
            key_file: "~/.ssh/$USER@$(hostname -s)"
          become: true
          async: 60
          poll: 30
        - name: Run rustup installer
          ansible.builtin.command:
            cmd: sh -s -- default-toolchain stable -y
            stdin: "{{ rust_installer.content }}"
          async: 120
          poll: 0
        - name: Create GPG key
          ansible.builtin.command:
            cmd: gpg --batch --passphrase {{ gpgpassphrase }} --quick-gen-key "Austin Lucas Lake <53884490+austinlucaslake@users.noreply.github.com>" ed25519 sign 1y
          async: 15
          poll: 0
        - name: Load Spotify GPG key
          ansible.builtin.command:
            cmd: sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/spotify.gpg
            stdin: "{{ spotifygpgkey.content }}"
          async: 15
          poll: 0
        - name: Load GitHub CLI GPG key and set file permissions
          ansible.builtin.command:
            cmd: sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg && sudo chmod go+r /usr/share/keyrings/githubcli-archive.keyring.gpg
            stdin: "{{ githubcligpgkey.content }}"
          async: 15
          poll: 0
    - name: Batch 3
      block:
        - name: Store GPG keyid
          ansible.builtin.command:
            cmd: gpg --list-secret-keys --keyid-format=long | grep 'sec' | cut -d/ -f2- | cut -d ' ' -f-1
          register: gpgkeyid
          async: 15
          poll: 0
        - name: Store GPG fingerprint
          ansible.builtin.command:
            cmd: gpg --list-options show-only-fpr-mbox --list-secret-keys | awk '{print $1}' | cut -d ' ' -f1- | head -n 1
          register: gpgfingerprint
          async: 15
          poll: 0
        - name: Add GitHub CLI apt repository to sources.list
          ansible.builtin.apt_repository:
            repo: deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main
            filename: github-cli
          async: 15
          poll: 0
        - name: Add Spotify apt repository to sources.list
          ansible.builtin.apt_repository:
            repo: deb http://repository.spotify.com stable non-free
            filename: spotify
          async: 15
          poll: 0
        - name: Install clippy and rustfmt
          ansible.builtin.command:
            cmd: rustup component add clippy rustfmt
          async: 60
          poll: 0
        - name: Install cargo-update, cargo-leptos, and trunk
          ansible.builtin.command:
            cmd: cargo install --locked cargo-leptos cargo-update trunk
          async: 60
          poll: 0
    - name: Install GitHub CLI and Spotify
      ansible.builtin.apt:
        update_cache: true
        package:
          - gh
          - spotify-client
      async: 60
      poll: 0
    - name: Load Configuration files
      ansible.builtin.copy:
        src: "~/code/dotfiles/{{ item }}"
        dest: "~/{{ item }}"
        mode: preserve
      become: true
      with_items:
        - .bashrc
        - .bash_profile
        - .config/alacritty
        - .config/nvim
        - .config/gh
        - .hushlogin
        - .profile
        - .tmux.conf
    - name: Ensure Git is configured
      ansible.builtin.command:
        cmd: "git config --global {{ item.name }} {{ item.value }}"
      with_items:
        - { name: "user.name", value: "Austin Lake"}
        - { name: "user.email", value: "53884490+austinlucaslake@users.noreply.github.com"}
        - { name: "core.sshCommand", value: "/usr/bin/ssh -i ~/.ssh/$USER@$(hostname -s)"}
        - { name: "commit.gpgsign", value: true }
        - { name: "user.signingkey", value: "{{ gpgkeyid.stdout }}" }
      async: 30
      poll: 0
    - name: Batch 4
      when: token is defined
      block:
        - name: GitHub CLI authentication
          ansible.builtin.command:
            cmd: gh auth login -p ssh --with-token
            stdin: "{{ token }}"
        - name: Add cryptographic keys to GitHub profile
          block:
            - name: SSH
              ansible.builtin.command:
                cmd: gh ssh-key add ~/.ssh/$USER@$(hostname -s).pub -t "$USER@$(hostname -s)"
              async: 15
              poll: 0
            - name: GPG
              ansible.builtin.command:
                cmd: gpg --armor --export {{ gpgkeyid.stdout }} | gh gpg-key add - -t "$USER@$(hostname -s)"
              async: 15
              poll: 0
    - name: Reboot machine
      ansible.builtin.reboot:
